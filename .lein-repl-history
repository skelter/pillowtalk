(require 'core.async)
(use 'core.async)
(use 'clojure.core.async)
(doc go)
(go (println "Howdy!"))
(doc chan)
(def mychan (chan))
(go (>! mychan "Howdy"))
(go (println (<! mychan)))
(go (println "Cool! " (<! mychan)))
(go (>! mychan "hooo doggy!"))
(go (println "Cool! " (<! mychan)))
(go (>! mychan "hooo doggy! 1"))
(go (>! mychan "hooo doggy! 2"))
(go (println "Cool! " (<! mychan)))
(go (>! mychan "hooo doggy! 3"))
(go (>! mychan "hooo doggy! 4"))
(go (>! mychan "hooo doggy! 5"))
(go (println "Cool! " (<! mychan)))
(go (>! mychan "hooo doggy! 6"))
(go (>! mychan "hooo doggy! 7"))
(go (>! mychan "hooo doggy! 8"))
(go (>! mychan "hooo doggy! 9"))
(go (>! mychan "hooo doggy! 10"))
(go (println "Cool! " (<! mychan)))
